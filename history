;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(evil-ex-search-history woman-topic-history xref--read-identifier-history bookmark-history read-char-history eww-prompt-history command-history swiper-history buffer-name-history ivy-history counsel-M-x-history empty-history read-expression-history file-name-history ido-file-history evil-ex-history ido-buffer-history minibuffer-history extended-command-history))
(setq evil-ex-search-history '("local" "alist" "local" "\\<rval\\>" "\\<lval\\>" "save-histo" "history" "bind" "SQLi" "sqlfor" "sql" "\\<history\\>" "\\<interactive\\>" "\\<hook\\>" "\\<connection\\>" "my-sql-conn" "sql-produc" "my-sql-connect" "\\<connect\\>" "sqlformat" "prog" "eader" "mot" "\\<mode\\>" "\\<sqlformat\\>" "sqlformat" "sqlfor" "hook" "leader" "previous" "SQL" "pervious" "insert-" "emacs" "\\<package\\>" "windows" "\\<test\\>" "\\<evil\\>" "evil-ex-start-word-search" "\\<evil\\>" "\\<whitespace\\>" "isearch" "search" "evil-search" "search" "\\<state\\>" "\\<smart\\>" "\\<emacs\\>" "\\<evil\\>" "persp" "\\<18\\>"))
(setq read-char-history '("h"))
(setq eww-prompt-history '("https://www.masteringemacs.org/article/mastering-key-bindings-emacs"))
(setq command-history '((eval-buffer) (my-sql-connect-server . "local") (eval-region (region-beginning) (region-end)) (eval-region (region-beginning) (region-end)) (evil-delete 1250 1251 'line nil nil) (evil-delete 1550 1555 'inclusive nil nil) (evil-delete 1550 1554 'inclusive nil nil) (describe-function 'completing-read) (describe-function 'sql-connect) (describe-function 'my-sql-connect-server) (my-sql-connect-server . "local") (eval-region (region-beginning) (region-end)) (evil-delete 12 28 'line nil nil) (sql-send-region (region-beginning) (region-end)) (my-sql-connect-server . "local") (my-sql-connect-server . "local") (eval-region (region-beginning) (region-end)) (evil-delete 1370 1378 'inclusive nil nil) (evil-delete 1370 1373 'inclusive nil nil) (eval-region (region-beginning) (region-end)) (eval-region (region-beginning) (region-end)) (persp-switch-to-buffer "init-sql.el") (persp-switch-to-buffer "*Messages*") (eval-region (region-beginning) (region-end)) (evil-replace 1419 1420 'exclusive 99) (evil-replace 1419 1420 'exclusive 100) (eval-region (region-beginning) (region-end)) (evil-delete 1102 1107 'inclusive nil nil) (describe-function 'completing-read) (evil-delete 1294 1298 'exclusive nil nil) (evil-delete 1298 1299 'exclusive nil nil) (evil-delete 1125 1158 'line nil nil) (describe-function 'completing-read) (kill-buffer "*SQL: <test-pg>-1*") (my/sql-test-pg) (my/sql-cvault-18) (eval-region (region-beginning) (region-end)) (eval-region (region-beginning) (region-end)) (evil-record-macro 24) (eval-region (region-beginning) (region-end)) (eval-region (region-beginning) (region-end)) (my/sql-test-pg) (kill-buffer "sql.el.gz") (evil-record-macro 24) (kill-buffer "*SQL: <test-pg>*") (eval-region (region-beginning) (region-end)) (evil-delete 2419 2420 'line nil nil) (eval-region (region-beginning) (region-end)) (evil-delete 2286 2292 'inclusive nil nil) (describe-function 'use-package) (evil-delete 2283 2289 'inclusive nil nil) (comint-previous-matching-input-from-input 1) (sql-send-region (region-beginning) (region-end)) (sqlformat (region-beginning) (region-end)) (sql-mode) (my/sql-test-pg) (eval-region (region-beginning) (region-end)) (sqlformat (region-beginning) (region-end)) (eval-region (region-beginning) (region-end)) (sqlformat (region-beginning) (region-end)) (sql-send-region (region-beginning) (region-end)) (sql-mode) (sql-send-buffer) (evil-delete 166 167 'line nil nil) (eval-region (region-beginning) (region-end)) (evil-delete 2053 2064 'line nil nil) (my/sql-test-pg) (evil-execute-macro 1 nil) (my/sql-test-pg) (kill-buffer "*SQL: <test-pg>*") (eval-region (region-beginning) (region-end)) (evil-delete 2209 2209 'line nil nil) (my/sql-test-pg) (kill-buffer "*SQL: <test-pg>*") (my/sql-test-pg) (eval-buffer) (persp-rename "init edit") (eval-buffer) (my/sql-test-pg) (sql-mode) (my/sql-test-pg) (sql-mode) (sql-mode) (evil-delete 2053 2066 'line nil nil) (eval-region (region-beginning) (region-end)) (my/sql-test-pg) (my/sql-test-pg) (persp-rename "init edit") (persp-rename "init edit") (eval-region (region-beginning) (region-end)) (evil-yank 547 586 'line nil nil) (evil-delete 574 577 'inclusive nil nil) (kill-buffer "sqlformat.el") (evil-record-macro 24) (persp-remove-buffer "sqlformat.el") (persp-switch-to-buffer "init-sql.el") (eval-region (region-beginning) (region-end)) (evil-delete 1781 1787 'inclusive nil nil) (evil-yank 1699 1762 'line nil nil) (eval-region (region-beginning) (region-end))))
(setq swiper-history '("lcoa" "read" "read" "defvaar" #("local" 0 5 (ivy-index 0)) "defvar" #("alist" 0 5 (ivy-index 0)) "asdf" "bind" "defvar" #("save-histo" 0 10 (ivy-index 1)) #("history" 0 7 (ivy-index 3)) #("sqlfor" 0 6 (ivy-index 5)) "asdf" #("my-sql-conn" 0 11 (ivy-index 3)) "my-connect" "stringp" #("sql-produc" 0 10 (ivy-index 2)) "my/" #("my-sql-connect" 0 14 (ivy-index 2)) #("sqlformat" 0 9 (ivy-index 0)) #("prog" 0 4 (ivy-index 4)) "sql" #("eader" 0 5 (ivy-index 4)) #("mot" 0 3 (ivy-index 0)) "adf" "asd" #("leader" 0 6 (ivy-index 3)) #("previous" 0 8 (ivy-index 0)) "rep" "periviou" "eac" #("insert-" 0 7 (ivy-index 2)) "ESC" #("emacs" 0 5 (ivy-index 0)) #("windows" 0 7 (ivy-index 0)) #("evil-ex-start-word-search" 0 25 (ivy-index 2)) "sear" "sear" "sear" #("isearch" 0 7 (ivy-index 1)) #("search" 0 6 (ivy-index 0)) "asdf" #("evil-search" 0 11 (ivy-index 0)) #("evil-searc" 0 10 (ivy-index 0)) #("use-packa" 0 9 (ivy-index 0)) #("bl" 0 2 (ivy-index 0)) "evil-symbol-word-sear" "evil-sear" #("test-pg" 0 7 (ivy-index 2)) "ESC" "escape" "esca" "escape" "escape" #("emacs-state" 0 11 (ivy-index 0)) #("esc" 0 3 (ivy-index 0)) #("perspective" 0 11 (ivy-index 8)) #("gitlab" 0 6 (ivy-index 0)) "w" #("jump" 0 4 (ivy-index 9)) "window" "key" "k" "make-" "kep" "evil" "evil-emacs-sta" #("defualt" 0 7 (ivy-index 0)) "l" "init" #("cursor" 0 6 (ivy-index 6)) #("evil-def" 0 8 (ivy-index 0)) "ESC" #("auto" 0 4 (ivy-index 0)) #("complete" 0 8 (ivy-index 11)) "my" #("python-switch" 0 13 (ivy-index 0)) #("Exa" 0 3 (ivy-index 7)) #("which-key" 0 9 (ivy-index 1)) #("emacs-chin" 0 10 (ivy-index 0)) #("package" 0 7 (ivy-index 31)) "s" #("emacs-s" 0 7 (ivy-index 0)) "stat" "state" #("test" 0 4 (ivy-index 0)) "C-" #("postgres" 0 8 (ivy-index 5)) "tly"))
(setq buffer-name-history '(#("init-sql.el" 0 11 (ivy-index 1)) #("*Messages*" 0 10 (ivy-index 0)) #("*SQL: <test-pg>-1*" 0 18 (ivy-index 0)) #("sql.el.gz" 0 9 (ivy-index 0)) #("*SQL: <test-pg>*" 0 16 (ivy-index 3)) #("sqlformat.el" 0 12 (ivy-index 0)) #("*Packages*" 0 10 (ivy-index 0)) #("evil-vars.el" 0 12 (ivy-index 0)) #("init-evil.el" 0 12 (ivy-index 0)) #("evil-commands.el" 0 16 (ivy-index 0)) #("init.el" 0 7 (ivy-index 0)) #("*Warnings*" 0 10 (ivy-index 0)) #("test.el" 0 7 (ivy-index 0)) #("init-windows.el" 0 15 (ivy-index 0)) #("evil-states.el" 0 14 (ivy-index 0)) #("init-key-mapping.el" 0 19 (ivy-index 0)) #(" *Minibuf-1*" 0 12 (ivy-index 0)) #("test.sql" 0 8 (ivy-index 0)) #("test.py" 0 7 (ivy-index 0)) #("*SQL: <cvault-18>*" 0 18 (ivy-index 1)) #("*shell*" 0 7 (ivy-index 0)) #("todo.org" 0 8 (ivy-index 0)) #("NEWS" 0 4 (ivy-index 0)) #("init-python.el" 0 14 (ivy-index 0)) #("*Finder*" 0 8 (ivy-index 1)) #("COPYING" 0 7 (ivy-index 0))))
(setq ivy-history '(#("init-evil.el" 0 12 (ivy-index 2)) #("local" 0 5 (idx 0 ivy-index 0)) #("completing-read" 0 15 (ivy-index 0)) #("sql-connect" 0 11 (ivy-index 2)) #("my-sql-connect-server" 0 21 (ivy-index 0)) #("mes" 0 3 (ivy-index 0)) "*Messages*" #("test.sql" 0 8 (ivy-index 2)) #("init-ev" 0 7 (ivy-index 0)) "lisp/init-evil.el" #("w" 0 1 (ivy-index 0)) "*Warnings*" "*Messages*" #("use-package" 0 11 (ivy-index 68)) #("psql" 0 4 (ivy-index 0)) "*Messages*" "*Messages*" #("mess" 0 4 (ivy-index 0)) "*Messages*" #("init-" 0 5 (ivy-index 0)) "/Users/HeBee/PersonalData/.emacs.d/lisp/init-sql.el" #("init-sql.el" 0 11 (ivy-index 2)) #("*SQL: <test-pg>*" 0 16 (ivy-index 4)) #("*scratch* (psql)" 0 16 (ivy-index 3)) #("*Messages*" 0 10 (ivy-index 2)) #("init-sql" 0 8 (ivy-index 0)) "lisp/init-sql.el" #("~/.emacs.d/" 0 11 (ivy-index 0)) #("pg-sql" 0 6 (ivy-index 0)) #("sql" 0 3 (ivy-index 1)) #("main" 0 4 (ivy-index 0)) #("sqlform" 0 7 (ivy-index 1)) "/Users/HeBee/PersonalData/.emacs.d/elpa/sqlformat-20210305.209/sqlformat.el" #("sqlf" 0 4 (ivy-index 0)) "*sqlformat errors*" #("sqlformat.el" 0 12 (ivy-index 0)) #("sqlformat" 0 9 (ivy-index 2)) #("sql-prompt-regexp" 0 17 (ivy-index 0)) #("test" 0 4 (ivy-index 0)) #("postgres" 0 8 (ivy-index 1)) #("sql." 0 4 (ivy-index 3)) "/Users/HeBee/PersonalData/.emacs.d/lisp/init-sql.el" #("sql-input-ring-file-name" 0 24 (ivy-index 0)) #("init" 0 4 (ivy-index 1)) #("sql-working" 0 11 (ivy-index 0)) #("evil" 0 4 (ivy-index 0)) "/Users/HeBee/PersonalData/.emacs.d/lisp/init-evil.el" #("pro" 0 3 (ivy-index 0)) "init-projectile.el" #("win" 0 3 (ivy-index 0)) "init-windows.el" #("init.el" 0 7 (ivy-index 0)) "/Users/HeBee/PersonalData/.emacs.d/init.el" #("wind" 0 4 (ivy-index 0)) "init-windows.el" #("evil-inner-text-objects-map" 0 27 (ivy-index 0)) #("evil-symbol-word-search" 0 23 (ivy-index 0)) #("evil-ex-search-match-beg" 0 24 (ivy-index 4)) #("evil-ex-search-vim-style-regexp" 0 31 (ivy-index 11)) #("evil-ex-search-pattern" 0 22 (ivy-index 1)) #("evil-search-module" 0 18 (ivy-index 4)) "init-windows.el" #("init-pro" 0 8 (ivy-index 0)) "lisp/init-projectile.el" #("me" 0 2 (ivy-index 0)) #("bind-key" 0 8 (ivy-index 8)) "/Users/HeBee/PersonalData/.emacs.d/lisp/init-windows.el" "test.el" #("evil-select-search-module" 0 25 (ivy-index 0)) #("init-evil" 0 9 (ivy-index 0)) "/Users/HeBee/PersonalData/.emacs.d/lisp/init-evil.el" "evil-commands.el" "/Users/HeBee/PersonalData/.emacs.d/lisp/init-sql.el" "/Users/HeBee/PersonalData/.emacs.d/lisp/init-sql.el" #("windo" 0 5 (ivy-index 0)) "init-windows.el" "evil-states.el" #("test.el" 0 7 (ivy-index 0)) #("init-windows.el" 0 15 (ivy-index 1)) #("perspective" 0 11 (ivy-index 1)) #("persp-names" 0 11 (ivy-index 65)) #("persp-mode" 0 10 (ivy-index 1)) #("perspective-map" 0 15 (ivy-index 1)) #("perspective-20210709.2353" 0 25 (ivy-index 0)) #("/wor" 0 4 (ivy-index 0)) #("/opt/homebrew/" 0 14 (ivy-index 0)) #("1" 0 1 (ivy-index 0)) #("frame-configuration-to-register" 0 31 (ivy-index 2)) "/Users/HeBee/PersonalData/.emacs.d/init.el" #("register-alist" 0 14 (ivy-index 1)) #("evil-normal-state-map" 0 21 (ivy-index 0)) #("evil-emacs-state-map" 0 20 (ivy-index 0)) #("evil-emacs-state-cursor" 0 23 (ivy-index 4)) #("comment-style" 0 13 (ivy-index 0)) #("yasnippet-classic-snippets" 0 26 (ivy-index 1)) #("evil-terminal-cursor-changer" 0 28 (ivy-index 0))))
(setq counsel-M-x-history '(#("^eval" 0 5 (ivy-index 1)) "eval-buffer" #("^eval-re" 0 8 (ivy-index 0)) "eval-region" #("^eval-" 0 6 (ivy-index 0)) "eval-region" #("^eval-reg" 0 9 (ivy-index 0)) "eval-region" "eval-region" "eval-region" "eval-region" "eval-region" "eval-region" #("^my" 0 3 (ivy-index 1)) "my/sql-test-pg" "my/sql-cvault-18" "eval-region" #("^eval-region" 0 12 (ivy-index 0)) "eval-region" "eval-region" "eval-region" "my/sql-test-pg" #("^ev" 0 3 (ivy-index 0)) "eval-region" "eval-region" #("^comint-previous-matching-input-from-input" 0 42 (ivy-index 0)) "comint-previous-matching-input-from-input" #("send-" 0 5 (ivy-index 1)) "sql-send-region" #("^sqlf" 0 5 (ivy-index 0)) "sqlformat" #("^sql" 0 4 (ivy-index 1)) "sql-mode" "my/sql-test-pg" "eval-region" "sqlformat" "eval-region" #("^sqlfor" 0 7 (ivy-index 0)) "sqlformat" #("^sql-send" 0 9 (ivy-index 1)) "sql-send-region" #("^sql-mode" 0 9 (ivy-index 0)) "sql-mode" #("send" 0 4 (ivy-index 4)) "sql-send-buffer" #("reg" 0 3 (ivy-index 0)) "eval-region" "my/sql-test-pg" "my/sql-test-pg" "eval-region" #("^" 0 1 (ivy-index 0)) "my/sql-test-pg" #("^my/" 0 4 (ivy-index 0)) "my/sql-test-pg" "eval-buffer" #("^eval-buffer" 0 12 (ivy-index 0)) "eval-buffer" "my/sql-test-pg" #("^sql-m" 0 6 (ivy-index 0)) "sql-mode" "my/sql-test-pg" "sql-mode" "sql-mode" "eval-region" "my/sql-test-pg" "my/sql-test-pg" "eval-region" "eval-region" "eval-region" "sql-mode-menu" #("^package-list-packages" 0 22 (ivy-index 0)) "package-list-packages" "sqlformat" "sqlformat" #("^sqlform" 0 8 (ivy-index 0)) "sqlformat" "sql-mode-menu" #("^my/.*pg" 0 8 (ivy-index 0)) "my/sql-test-pg" "comint-previous-matching-input-from-input" #("^sqlformat" 0 10 (ivy-index 0)) "sqlformat" "my/sql-test-pg" #("^sql-" 0 5 (ivy-index 0)) "sql-mode" "my/sql-test-pg" #("^per" 0 4 (ivy-index 0)) "persp-mode" "persp-mode" "eval-region" "persp-mode" #("^pers" 0 5 (ivy-index 0)) "persp-mode" "eval-region" #("^eval-bu" 0 8 (ivy-index 0)) "eval-buffer" "eval-buffer" "eval-region" "eval-region" "eval-region"))
(setq read-expression-history '("message(file-name-directory ../.emacs.d)" "q"))
(setq file-name-history '(#("/Users/HeBee/PersonalData/.emacs.d/lisp/init-evil.el" 0 52 (ivy-index 2)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/.goo/" 0 45 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/test.el" 0 47 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/init.el" 0 42 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/test" 0 44 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/test" 0 39 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/init-windows.el" 0 55 (ivy-index 11)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/init-key-mapping.el" 0 59 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/init-layout.el" 0 54 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/test.sql" 0 48 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/test.sql" 0 43 (ivy-index 0)) #("/test.sql" 0 9 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/test.py" 0 47 (ivy-index 0)) "/Users/dba/.emacs.d/init.el" "~/.emacs.d/init.el"))
(setq ido-file-history '("init.el"))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("'<,'>s/emacs/insert/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20)) #("w" 0 1 (ex-index 1)) #("'<,'>s/normal/emacs/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("s/bar/test/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("q" 0 1 (ex-index 1 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)))) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1))))
(setq ido-buffer-history '("*Help*" "*Command Line*" "init.el" "*Messages*" "*scratch*" "*Warnings*" "init.el" "*scratch*" "*Buffer List*" "*scratch*" "*Packages*" "init.el" "*Messages*" "*Buffer List*"))
(setq minibuffer-history '("init edit" "sql" "2" "1" "emacs" "1" "https://www.masteringemacs.org/article/mastering-key-bindings-emacs" "evil-define-key" "end-of-line" "file-name-directory" "message" "concat" "message" "org-src-fontify-natively" "xfc" "set-fontset-font" "font-family-list" "dired-find-alternate-file" "set-frame-font" "global-mark-ring-max" "mark-ring-max" "set-mark-command-repeat-pop" "dired-dwim-target" "erase-buffer" "upcase-region" "auto-save-default" "backup-by-copying" "make-backup-files" "focus-out-hook" "desktop-save-mode" "require" "auto-save-default" "create-lockfiles" "backup-by-copying" "make-backup-files" "default-frame-alist" "display-graphic-p"))
(setq extended-command-history '("eval-region" #("eval-buffer" 0 11 (ivy-index 0)) #("eval-region" 0 11 (ivy-index 0)) #("persp-mode" 0 10 (ivy-index 0)) "evil-mode" "global-linum-mode" "line-number-mode" "evil-next-visual-line" "dired-x-find-file-other-window" "dired-x-find-file-other-window" "dired-man" "narrow-to-region" "save-some-buffers" "package-install" "evil-mode" "package-list-packages" "evil-mode" "package-list-packages" "package-install" "package-refresh-contents" "package-install" "package-refresh-contents" "package-refresh-contents" "package-install" "package-install" "load-file" "package-install"))
(setq evil-jumps-history 'nil)
