;; -*- mode: emacs-lisp; lexical-binding:t; coding: utf-8-emacs; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Mon Aug  1 21:56:32 2022
;; Desktop file format version 208
;; Emacs version 27.2

;; Global section:
(setq desktop-saved-frameset (vector 'frameset 1 '(25319 56208 708610 0) '(desktop . "208") "HeBee@MacBook-Pro.local" nil nil (list (list (list '(minibuffer . t) '(tty-type . "xterm-256color") '(tty . "/dev/tty") '(display-type . color) '(background-mode . dark) '(background-color . "#242424") '(foreground-color . "#f6f3e8") '(persp--modestring "[" #("main" 0 4 (mouse-face mode-line-highlight local-map (keymap (mode-line keymap (down-mouse-1 . persp-mode-line-click))))) "|" #("psql" 0 4 (face persp-selected-face)) "]") '(persp--recursive) (desktop-list* 'persp--last (record 'perspective "main" '("Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity") nil nil '(25319 56114 152654 0) '(25319 35106 824076 0) "Unprintable entity" (let ((mk (make-marker))) (add-hook 'desktop-delay-hook (lambda nil (set-marker mk 1481 (get-buffer "init-sql.el")))) mk))) (desktop-list* 'persp--curr (record 'perspective "psql" '("Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity") nil nil '(25319 56206 838517 0) '(25319 35122 817910 0) "Unprintable entity" (let ((mk (make-marker))) (add-hook 'desktop-delay-hook (lambda nil (set-marker mk nil (get-buffer " *temp*")))) mk))) '(persp--hash . "Unprintable entity") '(font . "tty") '(height . 48) '(width . 187) '(modeline . t) '(unsplittable) '(menu-bar-lines . 1) '(tab-bar-lines . 0) '(tool-bar-lines . 0) '(frameset--id . "4E03-84F0-9143-BD11") '(frameset--mini t) '(tabs (current-tab (name . "init-sql.el") (explicit-name)))) '((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 4) (min-pixel-width . 20) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 4) (min-pixel-height-safe . 1) (min-pixel-width-safe . 4)) 'hc '(pixel-width . 187) '(pixel-height . 47) '(total-width . 187) '(total-height . 47) '(normal-height . 1.0) '(normal-width . 1.0) '(combination-limit) '(leaf (pixel-width . 94) (pixel-height . 47) (total-width . 94) (total-height . 47) (normal-height . 1.0) (normal-width . 0.5) (buffer "test.sql" (selected . t) (hscroll . 0) (fringes 0 0 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 17) (start . 1)) (prev-buffers ("*SQL: <test-pg>*" 1 234) ("*Help*" 1 1) ("test.sql" 1 17) ("*scratch* (psql)" 1 145))) '(leaf (last . t) (pixel-width . 93) (pixel-height . 47) (total-width . 93) (total-height . 47) (normal-height . 1.0) (normal-width . 0.5) (buffer "*SQL: <test-pg>*" (selected) (hscroll . 0) (fringes 0 0 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 234) (start . 1)) (prev-buffers ("*SQL: <test-pg>*" 1 234)))))))
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring nil)
(setq regexp-search-ring '("local" "alist" "local" "save-histo" "history" "sqlfor"))
(setq register-alist '((48 . "my/sql-test-pg")))
(setq file-name-history '(#("/Users/HeBee/PersonalData/.emacs.d/lisp/init-evil.el" 0 52 (ivy-index 2)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/.goo/" 0 45 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/test.el" 0 47 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/init.el" 0 42 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/test" 0 44 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/test" 0 39 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/init-windows.el" 0 55 (ivy-index 11)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/init-key-mapping.el" 0 59 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/init-layout.el" 0 54 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/test.sql" 0 48 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/test.sql" 0 43 (ivy-index 0)) #("/test.sql" 0 9 (ivy-index 0)) #("/Users/HeBee/PersonalData/.emacs.d/lisp/test.py" 0 47 (ivy-index 0)) "/Users/dba/.emacs.d/init.el" "~/.emacs.d/init.el"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/Users/HeBee/PersonalData/.emacs.d/lisp/init-sql.el"
  "init-sql.el"
  'emacs-lisp-mode
  '(eldoc-mode global-auto-revert-mode override-global-mode company-mode projectile-mode ivy-mode)
  1481
  '(1481 nil)
  nil
  nil
  '((buffer-display-time 25319 56208 697204 0) (buffer-file-coding-system . prefer-utf-8-unix) (overwrite-mode))
  '((mark-ring (1403 1234 1347 1179 1484))))

(desktop-create-buffer 208
  "/Users/HeBee/PersonalData/.emacs.d/lisp/init-evil.el"
  "init-evil.el"
  'emacs-lisp-mode
  '(eldoc-mode global-auto-revert-mode override-global-mode company-mode projectile-mode ivy-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-display-time 25319 56208 696544 0) (buffer-file-coding-system . prefer-utf-8-unix) (overwrite-mode))
  '((mark-ring (1420))))

